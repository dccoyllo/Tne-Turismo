package udaff.io.entities;
// Generated 08-sep-2020 16:12:38 by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * UserAgencia generated by hbm2java
 */
@Entity
@Table(name = "user_agencia", catalog = "turismo_bd")
public class UserAgencia implements java.io.Serializable {

	private String cuenta;
	private Usuario usuario;
	private String nombre;
	private String ruc;
	private byte[] imagen;
	private String direccion;
	private String telefono;
	private String descripcion;
	private Set<Tour> tours = new HashSet<Tour>(0);
	private Set<LugarTuristico> lugarTuristicos = new HashSet<LugarTuristico>(0);
	private Set<RedSocial> redSocials = new HashSet<RedSocial>(0);

	public UserAgencia() {
	}

	public UserAgencia(Usuario usuario, String nombre, String ruc) {
		this.usuario = usuario;
		this.nombre = nombre;
		this.ruc = ruc;
	}

	public UserAgencia(Usuario usuario, String nombre, String ruc, byte[] imagen, String direccion, String telefono,
			String descripcion, Set<Tour> tours, Set<LugarTuristico> lugarTuristicos, Set<RedSocial> redSocials) {
		this.usuario = usuario;
		this.nombre = nombre;
		this.ruc = ruc;
		this.imagen = imagen;
		this.direccion = direccion;
		this.telefono = telefono;
		this.descripcion = descripcion;
		this.tours = tours;
		this.lugarTuristicos = lugarTuristicos;
		this.redSocials = redSocials;
	}

	@GenericGenerator(name = "udaff.io.entities.UserAgenciaIdGenerator", strategy = "foreign", parameters = @Parameter(name = "property", value = "usuario"))
	@Id
	@GeneratedValue(generator = "udaff.io.entities.UserAgenciaIdGenerator")

	@Column(name = "cuenta", unique = true, nullable = false, length = 45)
	public String getCuenta() {
		return this.cuenta;
	}

	public void setCuenta(String cuenta) {
		this.cuenta = cuenta;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "nombre", nullable = false, length = 45)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "ruc", nullable = false, length = 11)
	public String getRuc() {
		return this.ruc;
	}

	public void setRuc(String ruc) {
		this.ruc = ruc;
	}

	@Column(name = "imagen")
	public byte[] getImagen() {
		return this.imagen;
	}

	public void setImagen(byte[] imagen) {
		this.imagen = imagen;
	}

	@Column(name = "direccion", length = 45)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "telefono", length = 9)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@Column(name = "descripcion", length = 500)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userAgencia")
	public Set<Tour> getTours() {
		return this.tours;
	}

	public void setTours(Set<Tour> tours) {
		this.tours = tours;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userAgencia")
	public Set<LugarTuristico> getLugarTuristicos() {
		return this.lugarTuristicos;
	}

	public void setLugarTuristicos(Set<LugarTuristico> lugarTuristicos) {
		this.lugarTuristicos = lugarTuristicos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userAgencia")
	public Set<RedSocial> getRedSocials() {
		return this.redSocials;
	}

	public void setRedSocials(Set<RedSocial> redSocials) {
		this.redSocials = redSocials;
	}

}
