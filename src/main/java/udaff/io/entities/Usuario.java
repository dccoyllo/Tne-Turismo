package udaff.io.entities;
// Generated 08-sep-2020 16:12:38 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "turismo_bd")
public class Usuario implements java.io.Serializable {

	private String cuenta;
	private UserPerfil userPerfil;
	private String clave;
	private String nombreCuenta;
	private String nombre;
	private String apellido;
	private String email;
	private byte[] userImg;
	private Date fechaCreacion;
	private String userCodigoVerifi;
	private UserAgencia userAgencia;
	private UserCliente userCliente;

	public Usuario() {
	}

	public Usuario(String cuenta, UserPerfil userPerfil, String clave, String nombreCuenta, String email,
			Date fechaCreacion) {
		this.cuenta = cuenta;
		this.userPerfil = userPerfil;
		this.clave = clave;
		this.nombreCuenta = nombreCuenta;
		this.email = email;
		this.fechaCreacion = fechaCreacion;
	}

	public Usuario(String cuenta, UserPerfil userPerfil, String clave, String nombreCuenta, String nombre,
			String apellido, String email, byte[] userImg, Date fechaCreacion, String userCodigoVerifi,
			UserAgencia userAgencia, UserCliente userCliente) {
		this.cuenta = cuenta;
		this.userPerfil = userPerfil;
		this.clave = clave;
		this.nombreCuenta = nombreCuenta;
		this.nombre = nombre;
		this.apellido = apellido;
		this.email = email;
		this.userImg = userImg;
		this.fechaCreacion = fechaCreacion;
		this.userCodigoVerifi = userCodigoVerifi;
		this.userAgencia = userAgencia;
		this.userCliente = userCliente;
	}

	@Id

	@Column(name = "cuenta", unique = true, nullable = false, length = 45)
	public String getCuenta() {
		return this.cuenta;
	}

	public void setCuenta(String cuenta) {
		this.cuenta = cuenta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_perfil", nullable = false)
	public UserPerfil getUserPerfil() {
		return this.userPerfil;
	}

	public void setUserPerfil(UserPerfil userPerfil) {
		this.userPerfil = userPerfil;
	}

	@Column(name = "clave", nullable = false, length = 45)
	public String getClave() {
		return this.clave;
	}

	public void setClave(String clave) {
		this.clave = clave;
	}

	@Column(name = "nombre_cuenta", nullable = false, length = 45)
	public String getNombreCuenta() {
		return this.nombreCuenta;
	}

	public void setNombreCuenta(String nombreCuenta) {
		this.nombreCuenta = nombreCuenta;
	}

	@Column(name = "nombre", length = 45)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "apellido", length = 45)
	public String getApellido() {
		return this.apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	@Column(name = "email", nullable = false, length = 60)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "user_img")
	public byte[] getUserImg() {
		return this.userImg;
	}

	public void setUserImg(byte[] userImg) {
		this.userImg = userImg;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_creacion", nullable = false, length = 10)
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	@Column(name = "user_codigo_verifi", length = 45)
	public String getUserCodigoVerifi() {
		return this.userCodigoVerifi;
	}

	public void setUserCodigoVerifi(String userCodigoVerifi) {
		this.userCodigoVerifi = userCodigoVerifi;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "usuario")
	public UserAgencia getUserAgencia() {
		return this.userAgencia;
	}

	public void setUserAgencia(UserAgencia userAgencia) {
		this.userAgencia = userAgencia;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "usuario")
	public UserCliente getUserCliente() {
		return this.userCliente;
	}

	public void setUserCliente(UserCliente userCliente) {
		this.userCliente = userCliente;
	}

}
